# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
defaults: &defaults
  docker:
    - image: circleci/node:10

master_only: &master_only
  filters:
    branches:
      only:
        - master

release_only: &release_only
  filters:
    branches:
      only:
        - master
    tags:
      only: /^v(\d+\.)(\d+\.)(\d+)$/

version: 2.1
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - package.json
            - LICENSE
            - README.md
            - dist

  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run ci
      - store_test_results:
          path: test-results

  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
      - run: npm publish

workflows:
  version: 2.1
  hotpot:
      jobs:
        - prepare:
            <<: *release_only
        - test:
            <<: *release_only
            requires:
              - prepare
        - build:
            <<: *release_only
            requires:
              - test
        - release:
            <<: *release_only
            requires:
              - build

  lunch:
    jobs:
      - prepare:
          <<: *master_only
      - test:
          <<: *master_only
          requires:
            - prepare
      - build:
          <<: *master_only
          requires:
            - test
